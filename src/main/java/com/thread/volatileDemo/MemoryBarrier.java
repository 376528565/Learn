package com.thread.volatileDemo;

public class MemoryBarrier {

    /**
     * memory barrier 内存屏障
     * JVM在对共享数据添加了volatile关键字的类时，在编译阶段会添加lock锁
     * 在多核CPU中，lock指令执行两件事
     * 1、将当前处理器缓存行的数据写回到系统内存。
     * 2、写回内存的操作会使在其他 CPU 里缓存了该内存地址的数据无效
     * 原理：
     * 为了保证各个处理器的缓存是一致的，实现了缓存一致性协议(MESI)，
     * 每个处理器通过嗅探在总线上传播的数据来检查自己缓存的值是不是过期了，
     * 当处理器发现自己缓存行对应的内存地址被修改，就会将当前处理器的缓存行设置成无效状态，
     * 当处理器对这个数据进行修改操作的时候，会重新从系统内存中把数据读到处理器缓存里
     */

}
